#! /bin/sh
#
# Author:	Andreas Olsson <andreas@arrakis.se>
# Version:	@(#)autossh_tunnel.foo  0.1  27-Aug-2008  andreas@arrakis.se
# Revisions: Emmanuel Geoffray <emmanuel@soixantecircuits.fr>
#
# For each tunnel; make a uniquely named copy of this template.
# Number your ports with a step of 3,
# ie. host1: port 60029 for the tunnel, 60001 and 60002 will be used for autossh monitoring
# host2: 60003, etc.
#

### BEGIN INIT INFO
# Provides:           autossh_tunnel
# Required-Start:
# Should-Start:
# Required-Stop:
# Should-Stop:
# Default-Start:      2 3 4 5
# Default-Stop:       
# Short-Description:  Reconnects a ssh tunnel
# Description:        Runs up a autossh process
### END INIT INFO


## SETTINGS
#
# autossh monitoring port (unique)
TUNNELPORT=60044 
SERVERPORT=22
MPORT=$((TUNNELPORT+1))
# the ssh tunnel to setup
TUNNEL="-p $SERVERPORT -R $TUNNELPORT:localhost:22"
# remote user
RUSER="kan"
# remote server
RSERVER="ks3326340.kimsufi.com"
# You must use the real autossh binary, not a wrapper.
DAEMON=/usr/lib/autossh/autossh
#DAEMON=/usr/bin/autossh
#
## END SETTINGS

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

NAME=`basename $0`
PIDFILE=/var/run/${NAME}.pid
SCRIPTNAME=/etc/init.d/${NAME}
DESC="the tunnel"
USER=minad

test -x $DAEMON || exit 0

export AUTOSSH_PORT=${MPORT}
export AUTOSSH_PIDFILE=${PIDFILE}
ASOPT=${TUNNEL}" -f -N "${RUSER}"@"${RSERVER}

#	Function that starts the daemon/service.
d_start() {
  touch $PIDFILE
  chown $USER $PIDFILE
	start-stop-daemon --start --chuid $USER --user $USER --pidfile $PIDFILE \
		--exec $DAEMON -- $ASOPT
	if [ $? -gt 0 ]; then
	    echo -n " not started (or already running)"
	else
	    sleep 1
	    start-stop-daemon --stop --user $USER --quiet --pidfile $PIDFILE \
		--test --exec $DAEMON > /dev/null || echo -n " not started"
	fi

}

#	Function that stops the daemon/service.
d_stop() {
	start-stop-daemon --stop --user $USER --quiet --pidfile $PIDFILE \
		--exec $DAEMON \
		|| echo -n " not running"
}


case "$1" in
  start)
	echo -n "Starting $DESC: $NAME"
	d_start
	echo "."
	;;
  stop)
	echo -n "Stopping $DESC: $NAME"
	d_stop
	echo "."
	;;

  restart)
	echo -n "Restarting $DESC: $NAME"
	d_stop
	sleep 1
	d_start
	echo "."
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
	exit 3
	;;
esac

exit 0
